@config
{
    "structuralSubsetOfInterfaceFullName": "Avensia.IStructuralSubsetOf"
}

@SomeDirectory\TestClass.cs

using Avensia;
using Newtonsoft.Json;
namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass1 {
        public int Prop1 { get; set; }
        public int Prop2 { get; set; }
    }

    [GenerateTypeScriptDefinition]
    public class TestClass2 : IStructuralSubsetOf<TestClass1> {
        public int Prop1 { get; set; }
    }
}

--------------------------------------------
@SomeDirectory\TestClass1.type.ts

interface TestClass1 {
  prop1: number;
  prop2: number;
}

export default TestClass1;

--------------------------------------------
@SomeDirectory\TestClass2.type.ts

import TestClass1 from './TestClass1.type';

interface TestClass2 {
  prop1: number;
}

export default TestClass2;

// This type must be a structural subset of TestClass1. A compilation error on the next line means that this is not the case.
// Note, however, that the error message from TypeScript might be bad or misleading.
(function() { const v: TestClass2 = {} as TestClass1; return v; });
