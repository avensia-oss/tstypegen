@SomeDirectory\TestClass.cs

using Avensia;
using System.Collections.Generic;

namespace Test {
    [GenerateTypeScriptDefinition]
    public class ModuleClass {
        public int Prop { get; set; }
    }

    [GenerateTypeScriptNamespace("test")]
    public class TestClass1 {
        public int Prop1 { get; set; }
    }

    [GenerateTypeScriptNamespace("test2")]
    public class TestClass4 {
        public int Prop1 { get; set; }
    }
}

--------------------------------------------
@SomeDirectory\TestClass3.cs

using Avensia;
using Test;

namespace Test2 {
    [GenerateTypeScriptNamespace("test")]
    public class TestClass2 : TestClass1 {
        public int Prop2 { get; set; }
        public TestEnum Prop3 { get; set; }
    }

    [GenerateTypeScriptNamespace("test")]
    public enum TestEnum {
        FirstValue,
        SecondValue,
        ThirdValue
    }
}

--------------------------------------------
@SomeDirectory\ModuleClass.type.ts

interface ModuleClass {
  prop: number;
}

export default ModuleClass;

--------------------------------------------
@test.d.ts

declare namespace test {
  interface TestClass1 {
    prop1: number;
  }

  interface TestClass2 extends TestClass1 {
    prop2: number;
    prop3: TestEnum;
  }

  const enum TestEnum {
    FirstValue = 'firstValue',
    SecondValue = 'secondValue',
    ThirdValue = 'thirdValue',
  }
}

--------------------------------------------
@test2.d.ts

declare namespace test2 {
  interface TestClass4 {
    prop1: number;
  }
}
