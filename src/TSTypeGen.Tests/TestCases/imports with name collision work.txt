@SomeDirectory\TestClass1.cs

using Avensia;
using Newtonsoft.Json;
namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass1 {
        public TestClass1 Prop1 { get; set; }
        public Test2.TestClass1 Prop2 { get; set; }
        public TestClass2 Prop3 { get; set; }
        public Test2.TestClass2 Prop4 { get; set; }
    }

    [GenerateTypeScriptDefinition]
    public class TestClass2 {
    }
}

--------------------------------------------
@SomeDirectory2\TestClass1.cs

using Avensia;
using Newtonsoft.Json;
namespace Test2 {
    [GenerateTypeScriptDefinition]
    public class TestClass1 {
    }

    [GenerateTypeScriptDefinition]
    public class TestClass2 {
    }
}

--------------------------------------------
@SomeDirectory\TestClass1.type.ts

import TestClass11 from '../SomeDirectory2/TestClass1.type';
import TestClass2 from './TestClass2.type';
import TestClass21 from '../SomeDirectory2/TestClass2.type';

interface TestClass1 {
  prop1: TestClass1;
  prop2: TestClass11;
  prop3: TestClass2;
  prop4: TestClass21;
}

export default TestClass1;

--------------------------------------------
@SomeDirectory\TestClass2.type.ts

interface TestClass2 {
}

export default TestClass2;

--------------------------------------------
@SomeDirectory2\TestClass1.type.ts

interface TestClass1 {
}

export default TestClass1;

--------------------------------------------
@SomeDirectory2\TestClass2.type.ts

interface TestClass2 {
}

export default TestClass2;
