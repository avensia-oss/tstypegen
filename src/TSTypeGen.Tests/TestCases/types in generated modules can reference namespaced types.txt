@compile

using Avensia;
[assembly: GenerateTypeScriptNamespace("tstest")]
namespace External {
    [GenerateTypeScriptDefinition]
    public class TestExternalClass {
    }
}

@Test.cs

using Avensia;
using External;

namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass1 {
        public TestExternalClass Prop1 { get; set; }
        public TestClass2 Prop2 { get; set; }
    }

    [GenerateTypeScriptNamespace("tstest2")]
    public class TestClass2 {
        public int Prop2 { get; set; }
    }

    [GenerateTypeScriptNamespace("tstest3")]
    public class TestClass3 {
        public TestClass2 Prop3 { get; set; }
    }
}

--------------------------------------------
@TestClass1.type.ts

interface TestClass1 {
  prop1: tstest.TestExternalClass;
  prop2: tstest2.TestClass2;
}

export default TestClass1;

--------------------------------------------
@tstest2.d.ts

declare namespace tstest2 {
  interface TestClass2 {
    prop2: number;
  }
}

--------------------------------------------
@tstest3.d.ts

declare namespace tstest3 {
  interface TestClass3 {
    prop3: tstest2.TestClass2;
  }
}
