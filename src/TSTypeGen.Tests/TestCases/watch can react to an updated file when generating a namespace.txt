@SomeDirectory\TestClass1.cs

using Avensia;
[assembly: GenerateTypeScriptNamespace("test")]
namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass1 {
        public int Prop1 { get; set; }
    }

    [GenerateTypeScriptNamespace("other")]
    public class OtherClass1 {
        public int Prop1 { get; set; }
    }
}

--------------------------------------------
@SomeDirectory\TestClass2.cs

using Avensia;
[assembly: GenerateTypeScriptNamespace("test")]
namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass2 {
        public int Prop1 { get; set; }
    }

    [GenerateTypeScriptNamespace("other")]
    public class OtherClass2 {
        public int Prop1 { get; set; }
    }
}

--------------------------------------------
@write SomeDirectory\TestClass2.cs

using Avensia;
[assembly: GenerateTypeScriptNamespace("test")]
namespace Test {
    [GenerateTypeScriptDefinition]
    public class TestClass2 {
        public int Prop1 { get; set; }
        public string Prop2 { get; set; }
    }

    [GenerateTypeScriptNamespace("other")]
    public class OtherClass2 {
        public int Prop1 { get; set; }
        public string Prop2 { get; set; }
    }
}

--------------------------------------------
@test.d.ts

declare namespace test {
  interface TestClass1 {
    prop1: number;
  }

  interface TestClass2 {
    prop1: number;
    prop2: string;
  }
}

--------------------------------------------
@other.d.ts

declare namespace other {
  interface OtherClass1 {
    prop1: number;
  }

  interface OtherClass2 {
    prop1: number;
    prop2: string;
  }
}
